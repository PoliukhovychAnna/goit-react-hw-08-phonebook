{"version":3,"file":"static/js/297.82c0c6d5.chunk.js","mappings":"uQAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oLAWzBC,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4KAUpBG,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0JAUrBM,EAAST,EAAAA,GAAAA,OAAaU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,oyBAkCtBQ,GAAcX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAoBa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oE,UCrDzCW,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUN,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZE,MAAOP,EAAAA,KAAaO,MAAM,iBAAiBF,SAAS,cAGhDG,EAAgB,CACpBN,KAAM,GACNK,MAAO,GACPD,SAAU,IAGCG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAeN,EACfO,SAPyB,SAACC,EAAQC,GACpCP,GAASQ,EAAAA,EAAAA,IAASF,IAClBC,EAAOE,WACT,EAKIC,iBAAkBrB,EAAasB,UAE/BC,EAAAA,EAAAA,MAACtC,EAAU,CAAAqC,SAAA,EACTC,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,CAAC,YAELT,EAAAA,EAAAA,KAACrB,EAAK,CAACgC,KAAK,OAAOrB,KAAK,UACxBU,EAAAA,EAAAA,KAAChB,EAAW,CAACM,KAAK,OAAOsB,UAAU,YAErCF,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,CAAC,SAELT,EAAAA,EAAAA,KAACrB,EAAK,CAACgC,KAAK,QAAQrB,KAAK,WACzBU,EAAAA,EAAAA,KAAChB,EAAW,CAACM,KAAK,QAAQsB,UAAU,YAEtCF,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,CAAC,YAELT,EAAAA,EAAAA,KAACrB,EAAK,CAACgC,KAAK,WAAWrB,KAAK,cAC5BU,EAAAA,EAAAA,KAAChB,EAAW,CAACM,KAAK,WAAWsB,UAAU,YAEzCZ,EAAAA,EAAAA,KAAClB,EAAM,CAAC6B,KAAK,SAAQF,SAAC,iBAI9B,E,UC/De,SAASI,IACtB,OACEH,EAAAA,EAAAA,MAAAI,EAAAA,SAAA,CAAAL,SAAA,EACET,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAAAN,UACLT,EAAAA,EAAAA,KAAA,SAAAS,SAAO,oBAETT,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C","sources":["components/RegisterForm/Styled.RegisterForm.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-top: 90px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 25px;\n  align-items: center;\n  padding: 20px;\n  border-radius: 5px;\n  min-width: 350px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 2px;\n  color: hsla(323, 87%, 50%, 0.664);\n  max-width: 300px;\n`;\n\nexport const Input = styled(Field)`\n  min-width: 300px;\n  min-height: 36px;\n  padding: 1px 5px;\n  font-size: 16px;\n  outline: none;\n  border-radius: 5px;\n  border-width: 0;\n`;\n\nexport const Button = styled.button`\n  margin-top: 15px;\n  width: 130px;\n  height: 35px;\n  border-radius: 30px;\n  margin-left: 20px;\n  font-size: 20px;\n  font-weight: 500;\n  transition: all 300ms cubic-bezier(0.39, 0.575, 0.565, 1);\n  background-color: hsla(323, 87%, 50%, 0.664);\n  border: 1px solid #111;\n  justify-content: center;\n\n  cursor: pointer;\n  text-decoration: none;\n  color: black;\n  text-align: center;\n\n  &:hover {\n    box-shadow: 0px 0px 26px 8px hsla(323, 87%, 50%, 0.664);\n    background-color: #000428;\n    color: hsla(323, 87%, 50%, 0.664);\n    transform: scale(1.05);\n  }\n\n  /* &:disabled {\n    background-color: hsla(323, 87%, 50%, 0.664);\n    border: 1px solid #111;\n    color: black;\n    box-shadow: 0px 0px 0px 0px hsla(323, 87%, 50%, 0.664);\n    transform: scale(1);\n  } */\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  font-size: 14px;\n  color: black;\n  max-width: 300px;\n`;\n","// import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport 'react-toastify/dist/ReactToastify.css';\n// import { Loader } from 'components/Loader';\nimport {\n  Button,\n  Input,\n  Label,\n  StyledForm,\n  StyledError,\n} from './Styled.RegisterForm';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n});\n\nconst defaultValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleRegisterSubmit = (values, action) => {\n    dispatch(register(values));\n    action.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={defaultValues}\n      onSubmit={handleRegisterSubmit}\n      validationSchema={SignupSchema}\n    >\n      <StyledForm>\n        <Label>\n          Username\n          <Input type=\"text\" name=\"name\" />\n          <StyledError name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Email\n          <Input type=\"email\" name=\"email\" />\n          <StyledError name=\"email\" component=\"div\" />\n        </Label>\n        <Label>\n          Password\n          <Input type=\"password\" name=\"password\" />\n          <StyledError name=\"password\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","Field","_templateObject3","Button","_templateObject4","StyledError","ErrorMessage","_templateObject5","SignupSchema","Yup","shape","name","min","max","required","password","email","defaultValues","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","action","register","resetForm","validationSchema","children","_jsxs","type","component","Register","_Fragment","Helmet"],"sourceRoot":""}