{"version":3,"file":"static/js/772.deab5306.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/Styled.ContactForm.js","components/ContactForm/ContactForm.jsx","components/Contact/Styled.Contact.js","components/Contact/Contact.jsx","components/ContactList/Styled.List.js","components/ContactList/ContactList.jsx","components/Filter/Styled.Filter.js","components/Filter/Filter.jsx","pages/Contacts/Styled.Contacts.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n);\n","import styled from \"styled-components\";\nexport const ContactFormContainer = styled.form`\n  margin-left: 50px;\n  margin-right: 100px;\n  border-radius: 6px;\n  border: 3px solid hsla(323, 87%, 50%, 0.664);\n  width: 400px;\n  padding: 20px;\n  h4 {\n    margin-left: 70px;\n  }\n  input {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 30px;\n    display: block;\n    width: 250px;\n    height: 30px;\n    border-radius: 4px;\n  }\n\n  button {\n    width: 150px;\n    height: 40px;\n    border-radius: 30px;\n    margin-left: 120px;\n    font-size: 15px;\n    font-weight: 600;\n    transition: all 300ms cubic-bezier(0.39, 0.575, 0.565, 1);\n    background-color: hsla(323, 87%, 50%, 0.664);\n    border: 1px solid #111;\n    cursor: pointer;\n    &:hover {\n      border: 2px solid #111;\n      box-shadow: 0px 0px 26px 8px hsla(323, 87%, 50%, 0.664);\n      background-color: #000428;\n      color: hsla(323, 87%, 50%, 0.664);\n    }\n  }\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { ContactFormContainer } from './Styled.ContactForm';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const isNameInContacts = contacts?.find(contact =>\n      contact.name\n        .toLowerCase()\n        .includes(form.elements.name.value.toLowerCase())\n    );\n\n    const isNumberInContacts = contacts?.find(\n      contact => contact.number === form.elements.number.value\n    );\n\n    if (isNameInContacts) {\n      toast.warn(`${form.elements.name.value} is already in contacts`, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'light',\n      });\n      return;\n    }\n\n    if (isNumberInContacts) {\n      toast.warn(\n        `Contact with number ${form.elements.number.value} already exists`,\n        {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n        }\n      );\n      return;\n    }\n\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <ContactFormContainer onSubmit={handleSubmit}>\n      <label>\n        <h4>Name</h4>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <h4>Number</h4>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </ContactFormContainer>\n  );\n};\n","import styled from \"styled-components\";\nexport const StyledContact = styled.li`\n  position: relative;\n  height: 60px;\n  width: 300px;\n  padding: 20px;\n  border-radius: 6px;\n  border: 3px solid hsla(323, 87%, 50%, 0.664);\n\n  span {\n    display: block;\n    margin-top: 8px;\n  }\n  button {\n    position: absolute;\n    top: 33px;\n    right: 20px;\n    width: 100px;\n    height: 37px;\n    font-size: 15px;\n    font-weight: 500;\n    border-radius: 30px;\n    transition: all 300ms cubic-bezier(0.39, 0.575, 0.565, 1);\n    background-color: hsla(323, 87%, 50%, 0.664);\n    border: 1px solid #111;\n    cursor: pointer;\n    &:hover {\n      border: 2px solid #111;\n      box-shadow: 0px 0px 26px 8px hsla(323, 87%, 50%, 0.664);\n      background-color: #000428;\n      color: hsla(323, 87%, 50%, 0.664);\n    }\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { StyledContact } from './Styled.Contact';\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <StyledContact key={id}>\n      <span>{name}</span>\n      <span>{number}</span>\n      <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </button>\n    </StyledContact>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\nexport const List = styled.ul`\nlist-style:none;\ndisplay:flex;\nflex-direction:column;\nrow-gap:20px;\npadding:20px;\n`","import { useEffect } from 'react';\nimport { Loader } from 'components/Loader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './Styled.List';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (!contacts?.length && !error & !isLoading) {\n    return <p>No contacts added yet.</p>;\n  }\n\n  if (!filteredContacts?.length) {\n    return <p>No matches.</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <>\n      <List>\n        {isLoading && <Loader />}\n        {filteredContacts &&\n          filteredContacts.map(contact => {\n            return (\n              <Contact\n                key={contact.id}\n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n              />\n            );\n          })}\n      </List>\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const StyledFilter = styled.label`\n  font-size: 19px;\n  margin-left:20px;\n  input {\n    display: block;\n    margin-left:20px;\n    margin-top: 20px;\n    margin-bottom: 30px;\n    width: 335px;\n    height: 30px;\n    border-radius: 4px;\n  }\n`;","import { setFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { StyledFilter } from './Styled.Filter';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <StyledFilter>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={event => dispatch(setFilter(event.target.value.trim()))}\n      />\n    </StyledFilter>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperTask = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nexport const PhonebookContainer = styled.div`\n  flex-direction: column;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  /* text-align: center; */\n  margin-left: 190px;\n  margin-top: 50px;\n  margin-bottom: 30px;\n`;\n\nexport const ContactContainer = styled.div`\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n  margin-top: 50px;\n`;\n","// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\n// import { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nimport {\n  ContactsTitle,\n  ContactContainer,\n  PhonebookTitle,\n  PhonebookContainer,\n  WrapperTask,\n} from './Styled.Contacts';\n\nexport default function Contacts() {\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n  return (\n    <WrapperTask>\n      <PhonebookContainer>\n        <PhonebookTitle>Phonebook</PhonebookTitle>\n        <ContactForm />\n      </PhonebookContainer>\n      <ContactContainer>\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter />\n        <ContactList />\n      </ContactContainer>\n    </WrapperTask>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","filterValue","contact","toLowerCase","includes","ContactFormContainer","styled","_templateObject","_taggedTemplateLiteral","ContactForm","dispatch","useDispatch","useSelector","_jsxs","onSubmit","e","preventDefault","form","target","isNameInContacts","elements","isNumberInContacts","number","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","newContact","addContact","reset","children","_jsx","type","pattern","title","required","StyledContact","Contact","_ref","id","onClick","deleteContact","List","ContactList","filteredContacts","useEffect","fetchContacts","_Fragment","Loader","StyledFilter","Filter","onChange","event","setFilter","trim","WrapperTask","PhonebookContainer","_templateObject2","PhonebookTitle","_templateObject3","ContactContainer","_templateObject4","ContactsTitle","_templateObject5","Contacts"],"sourceRoot":""}